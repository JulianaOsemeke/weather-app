(()=>{const e=document.querySelector(".search-location"),t=document.querySelector(".search-location input"),n=document.querySelector(".city-name p"),a=document.querySelector(".card-body"),s=document.querySelector(".card-top img"),i=document.querySelector(".back-card"),c=e=>Math.round(e-273.15);isDayTime=e=>!!e.includes("d"),updateWeather=e=>{const t=e.weather[0].icon,o=`http://openweathermap.org/img/wn/${t}@2x.png`;n.textContent=e.name,a.innerHTML=`\n  <div class="card-mid row">\n  <div class="col-8 text-center temp">\n  <span>${c(e.main.temp)}&deg;C</span>\n  </div>\n  <div class="col-4 condition-temp">\n  <p class="condition">${e.weather[0].description}</p>\n  <p class="high">${c(e.main.temp_max)}&deg;C</p>\n  <p class="low">${c(e.main.temp_min)}&deg;C</p>\n  </div>\n  </div>\n  <div class="icon-container card shadow mx-auto"> \n  <img src="${o}" alt="">\n  </div>\n  <div class="card-bottom px-5 py-4 row">\n  <div class="col text-center">\n  <p>${c(e.main.feels_like)}&deg;C</p>\n  <span>feels like</span>\n  </div>\n  </div>\n  <div class="col text-center">\n  <p>${e.main.humidity}%</p>\n  <span>Humidity</span>\n  </div>\n  `,isDayTime(t)?(isDayTime("day"),s.setAttribute("src","Assets/sunny.svg"),n.classList.contains("text-white")?n.classList.remove("text-black"):n.classList.add("text-black")):(isDayTime("night"),s.setAttribute("src","Assets/night-sky.svg"),n.classList.contains("text-black")?n.classList.remove("text-black"):n.classList.add("text-white")),i.classList.remove("d-none")},e.addEventListener("submit",(n=>{n.preventDefault();const a=t.value.trim();e.reset(),(async e=>{const t=`?q=${e}&appid=30c88769ea6e3e295295f636c59bfc46`,n=await fetch("http://api.openweathermap.org/data/2.5/weather"+t);return await n.json()})(a).then((e=>{updateWeather(e)})).catch((e=>{a.log(e)}))}))})();